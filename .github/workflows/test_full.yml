name: Full test suite

on: [push,pull_request]

jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    if: |
      !contains(github.event.head_commit.message, '+ONLYDOCS') &&
      !contains(github.event.head_commit.message, '+NOFULLTEST')
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            label: linux-64
            prefix: /usr/share/miniconda3/envs/test

          - os: macos-latest
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/test

          - os: windows-latest
            label: win-64
            prefix: C:\Miniconda3\envs\test
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      - name: Install dependencies on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y libncurses5-dev libncursesw5-dev
          cd /usr/lib64
          ln -s libncurses.so.6 libncurses.so.5
          ln -s libtinfo.so.6 libtinfo.so.5

      - uses: conda-incubator/setup-miniconda@v3.0.4
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          activate-environment: test${{ matrix.python-version }}
          use-mamba: true
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v4
        with:
          path: ${{ matrix.prefix }}${{ matrix.python-version }}
          key: ${{ matrix.label }}-conda-py${{ matrix.python-version }}-${{ hashFiles('.github/environment.yml') }}-${{ steps.date.outputs.date }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 1
        id: cache

      - name: Update environment
        run: mamba env update -n test${{ matrix.python-version }} -f .github/environment.yml
        if: steps.cache.outputs.cache-hit != 'true'

      - name: print package info
        shell: bash -l {0}
        run: |
          conda info -a
          conda list

      - name: Install MSNoise-DB
        shell: bash -l {0}
        run: |
          pip install .

      - name: Test suite
        shell: bash -l {0}
        run: |
          msnoisedb download-and-extract ./
          ls
          msnoisedb install-db
          msnoisedb start-server&
          msnoisedb create-database bubu
          msnoisedb show-databases
          msnoisedb stop-server
